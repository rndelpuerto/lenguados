# .github/workflows/deploy-docs.yml
name: Deploy Docusaurus Documentation to GitHub Pages
# ───────────────────────────────────────────────────────────────────────────────
# Trigger: Whenever code is pushed to the default branch (main).
# Ensures that documentation is rebuilt and redeployed on every change.
# ───────────────────────────────────────────────────────────────────────────────
on:
 push:
  branches:
   - main

# ───────────────────────────────────────────────────────────────────────────────
# Concurrency: Cancel any in-flight deployment when a new push arrives,
# preventing multiple deployments from overlapping.
# ───────────────────────────────────────────────────────────────────────────────
concurrency:
 group: deploy-docs-${{ github.ref }}
 cancel-in-progress: true

jobs:
 # ─────────────────────────────────────────────────────────────────────────────
 # Job: build
 # Purpose: Checkout code, install dependencies, build the Docusaurus site,
 #           and upload the static files as an artifact for later deployment.
 # ─────────────────────────────────────────────────────────────────────────────
 build:
  name: Build Documentation
  runs-on: ubuntu-latest

  # Permissions: we only need to read repo contents and mint an OIDC token.
  permissions:
   contents: read
   id-token: write

  steps:
   - name: Checkout repository
     uses: actions/checkout@v4
     with:
      # We only need a single level of history to reduce clone time.
      fetch-depth: 1

   - name: Set up Node.js 22.x and enable npm cache
     uses: actions/setup-node@v4
     with:
      node-version: '22.x'
      cache: npm

   - name: Install monorepo dependencies
     run: npm ci
     # npm ci is faster and more reproducible than npm install in CI.

   - name: Build Docusaurus site
     run: npm run docs
     # This script from package.json will build /docs into docs/build.

   - name: Configure GitHub Pages deployment
     uses: actions/configure-pages@v4
     # Prepares the Pages environment and sanity-checks settings.

   - name: Upload built site as artifact
     uses: actions/upload-pages-artifact@v3
     with:
      path: docs/build
     # Saves the static files for the deploy job.

 # ─────────────────────────────────────────────────────────────────────────────
 # Job: deploy
 # Purpose: Take the previously uploaded site artifact and publish it
 #           to GitHub Pages with minimal elevated permissions.
 # ─────────────────────────────────────────────────────────────────────────────
 deploy:
  name: Deploy to GitHub Pages
  needs: build
  runs-on: ubuntu-latest

  # Permissions: only write to Pages, nothing else.
  permissions:
   pages: write
   id-token: write

  environment:
   name: github-pages
   # Populates the Pages URL in the UI once deployed:
   url: ${{ steps.deploy-pages.outputs.page_url }}

  steps:
   - name: Deploy static site to Pages
     id: deploy-pages
     uses: actions/deploy-pages@v4
     # Uses the artifact from configure-pages/upload-pages-artifact.
